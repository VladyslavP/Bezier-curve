{"version":3,"sources":["Circle.js","constants.js","Bezier.js","App.js","serviceWorker.js","index.js"],"names":["Circle","_this","this","react_default","a","createElement","r","stroke","strokeWidth","fill","cx","props","cy","className","style","onMouseDown","e","handleMouseDown","onMouseUp","handleMouseUp","Component","COORDINATES","title","key","CIRCLES","xKey","yKey","LINES","xStart","yStart","xEnd","yEnd","Bezier","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","document","removeEventListener","handleMouseMove","event","_resultMove","_this$state","state","xDiff","pageX","yDiff","pageY","concat","resultMove","defineProperty","console","log","handleMove","coordinates","xAnchorStart","yAnchorStart","xHandleStart","yHandleStart","xHandleEnd","yHandleEnd","xAnchorEnd","yAnchorEnd","moveObject","bind","assertThisInitialized","performAnimation","d","interpolateCurve","elem","setAttribute","_ref","path","value","data","objectSpread","target","p","getMovePoint","setState","_this2","x","y","addEventListener","_this3","map","coordinate","onChange","type","position","top","left","width","height","id","ref","line","index","x1","y1","strokeDasharray","x2","y2","circle","src_Circle","onDragStart","slice","first","second","result","App","src_Bezier","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.47587f01.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Circle extends Component {\n  render() {\n    return (\n      <circle\n        r=\"15\"\n        stroke=\"black\"\n        strokeWidth=\"1\"\n        fill=\"red\"\n        cx={this.props.cx}\n        cy={this.props.cy}\n        className={this.props.className}\n        style={this.props.style}\n        onMouseDown={(e) => this.props.handleMouseDown(e)}\n        onMouseUp={(e) => this.props.handleMouseUp(e)}\n      />\n    );\n  }\n}\nexport default Circle;\n","export const COORDINATES = [\n  {\n    title: 'X0',\n    key: 'xAnchorStart',\n  },\n  {\n    title: 'Y0',\n    key: 'yAnchorStart',\n  },\n  {\n    title: 'X1',\n    key: 'xHandleStart',\n  },\n  {\n    title: 'Y1',\n    key: 'yHandleStart',\n  },\n  {\n    title: 'X2',\n    key: 'xHandleEnd',\n  },\n  {\n    title: 'Y2',\n    key: 'yHandleEnd',\n  },\n  {\n    title: 'X3',\n    key: 'xAnchorEnd',\n  },\n  {\n    title: 'Y3',\n    key: 'yAnchorEnd',\n  }\n];\n\nexport const CIRCLES = [\n  {\n    xKey: 'xAnchorStart',\n    yKey: 'yAnchorStart',\n  },\n  {\n    xKey: 'xHandleStart',\n    yKey: 'yHandleStart',\n  },\n  {\n    xKey: 'xHandleEnd',\n    yKey: 'yHandleEnd',\n  },\n  {\n    xKey: 'xAnchorEnd',\n    yKey: 'yAnchorEnd',\n  },\n];\nexport const LINES = [\n  {\n    xStart: 'xAnchorStart',\n    yStart: 'yAnchorStart',\n    xEnd: 'xHandleStart',\n    yEnd: 'yHandleStart',\n  },\n  {\n    xStart: 'xHandleEnd',\n    yStart: 'yHandleEnd',\n    xEnd: 'xAnchorEnd',\n    yEnd: 'yAnchorEnd',\n  },\n];\n","import React, { Component } from 'react';\nimport Circle from './Circle';\nimport { COORDINATES, CIRCLES, LINES } from './constants';\n\nclass Bezier extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      coordinates: {\n        xAnchorStart: 711,\n        yAnchorStart: 459,\n        xHandleStart: 523,\n        yHandleStart: 200,\n        xHandleEnd: 1106,\n        yHandleEnd: 200,\n        xAnchorEnd: 891,\n        yAnchorEnd: 459,\n      },\n      moveObject: {\n        xAnchorStart: 711,\n        yAnchorStart: 459,\n        xHandleStart: 523,\n        yHandleStart: 200,\n        xHandleEnd: 1106,\n        yHandleEnd: 200,\n        xAnchorEnd: 891,\n        yAnchorEnd: 459,\n      },\n    };\n    this.handleMove = this.handleMove.bind(this);\n    this.performAnimation = this.performAnimation.bind(this);\n  }\n\n  componentDidMount() {\n    const { d } = this.interpolateCurve(this.state.coordinates);\n    this.elem.setAttribute( 'd' , d );\n  }\n\n  interpolateCurve({\n      xAnchorStart,\n      yAnchorStart,\n      xHandleStart,\n      yHandleStart,\n      xHandleEnd,\n      yHandleEnd,\n      xAnchorEnd,\n      yAnchorEnd\n    }\n  ) {\n    const path = this.elem;\n\n    const d = `M${xAnchorStart} ${yAnchorStart}C${xHandleStart} ${yHandleStart} ${xHandleEnd} ${yHandleEnd} ${xAnchorEnd} ${yAnchorEnd}`;\n\n    path.setAttribute('class', 'path');\n    path.setAttribute( 'd' , d );\n    path.setAttribute( 'stroke' , 'white' );\n    path.setAttribute( 'strokeWidth' , 10.0 );\n    path.setAttribute( 'fill' , 'none' );\n\n    return { path, d };\n  }\n\n  static getMovePoint(first, second) {\n    const result = {};\n    for (const key in first) {\n      if (first[key] < second[key]) {\n        result[key] = first[key] + 1;\n      } else if (first[key] > second[key]) {\n        result[key] = first[key] - 1;\n      } else {\n        result[key] = second[key];\n      }\n    }\n\n    return result;\n  }\n\n  performAnimation(value) {\n    const { d } = this.interpolateCurve(value);\n    this.elem.setAttribute( 'd' , d );\n  }\n\n  onChange(key, data) {\n    const moveObject = {\n      ...this.state.moveObject,\n      [key]: data.target.value,\n    };\n    this.handleMove(moveObject);\n  }\n\n  handleMove(value) {\n    const moveObject = {\n      ...this.state.moveObject,\n      ...value,\n    };\n    const p = Bezier.getMovePoint(this.state.coordinates, moveObject);\n    this.setState({\n      coordinates: p,\n      moveObject,\n    });\n    this.performAnimation(moveObject);\n  }\n\n  handleMouseUp = () => {\n    document.removeEventListener('mousemove', this.handleMouseMove);\n  };\n\n  onDragStart(e, key) {\n    this.setState({\n      xStart: e.x,\n      yStart: e.y,\n      key,\n    }, () => {\n      document.addEventListener('mousemove', this.handleMouseMove);\n    });\n  }\n\n  handleMouseMove = (event) => {\n    const { xStart, yStart, key } = this.state;\n    const xDiff = xStart - event.pageX;\n    const yDiff = yStart - event.pageY;\n\n    const xKey = `x${key}`;\n    const yKey = `y${key}`;\n    const resultMove = {\n      [xKey]: xStart - xDiff,\n      [yKey]: yStart - yDiff\n    };\n    console.log(xDiff, yStart);\n    this.handleMove(resultMove);\n  };\n\n  render() {\n    const { moveObject } = this.state;\n    return (\n      <div>\n        <div className={'coordinates-wrapper'}>\n          {COORDINATES.map((coordinate) => (\n            <div key={coordinate.key} className={'coordinates'}>\n              <span>{coordinate.title}:</span>\n              <input\n                onChange={value => this.onChange(coordinate.key, value)}\n                type=\"text\"\n                value={moveObject[coordinate.key]}\n              />\n            </div>\n          ))}\n        </div>\n        <div>\n          <svg style={{ position: 'absolute', top: 0, left: 0, width: '100%' }} height=\"1000\" id=\"bezier\">\n            <path ref={elem => this.elem = elem}></path>\n            {\n              LINES.map((line, index) => (\n                <line\n                  key={index}\n                  x1={moveObject[line.xStart]}\n                  y1={moveObject[line.yStart]}\n                  strokeWidth=\"1\"\n                  strokeDasharray=\"6\"\n                  stroke=\"white\"\n                  x2={moveObject[line.xEnd]}\n                  y2={moveObject[line.yEnd]}\n                />\n              ))\n            }\n            {\n              CIRCLES.map((circle) => (\n                <Circle\n                  key={circle.xKey}\n                  handleMouseDown={() => this.onDragStart({ x: moveObject[circle.xKey], y: moveObject[circle.yKey] }, circle.xKey.slice(1))}\n                  handleMouseUp={() => this.handleMouseUp()}\n                  className={'circle'}\n                  cx={moveObject[circle.xKey]}\n                  cy={moveObject[circle.yKey]}\n                />\n              ))\n            }\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bezier;\n","import React from 'react';\nimport Bezier from './Bezier';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Bezier curve\n      </header>\n      <Bezier />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}